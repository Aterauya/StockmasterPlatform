// <auto-generated />
using System;
using CompaniesEntityFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompaniesEntityFramework.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20201210113327_ChangeMaxSymbolLengthTo10")]
    partial class ChangeMaxSymbolLengthTo10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanyCountry", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CountryId")
                        .HasName("CompanyCountry_pk");

                    b.ToTable("CompanyCountry");
                });

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanyCurrency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("CurrencyId")
                        .HasName("CompanyCurrency_pk");

                    b.ToTable("CompanyCurrency");
                });

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanyIndustry", b =>
                {
                    b.Property<Guid>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IndustryId")
                        .HasName("CompanyIndustry_pk");

                    b.ToTable("CompanyIndustry");
                });

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanyInformation", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("IndustryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Ipo")
                        .HasColumnType("date");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("MarketCapitalization")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float>("OutstandingShares")
                        .HasColumnType("real");

                    b.Property<Guid>("SymbolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CompanyId")
                        .HasName("CompanyInformation_pk");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("SymbolId");

                    b.ToTable("CompanyInformation");
                });

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanySymbol", b =>
                {
                    b.Property<Guid>("SymbolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("SymbolId")
                        .HasName("CompanySymbol_pk");

                    b.ToTable("CompanySymbol");
                });

            modelBuilder.Entity("CompaniesEntityFramework.Models.CompanyInformation", b =>
                {
                    b.HasOne("CompaniesEntityFramework.Models.CompanyCountry", "Country")
                        .WithMany("CompanyInformation")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("CompanyCountry_CompanyInformation")
                        .IsRequired();

                    b.HasOne("CompaniesEntityFramework.Models.CompanyCurrency", "Currency")
                        .WithMany("CompanyInformation")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("CompanyInformation_CompanyCurrency")
                        .IsRequired();

                    b.HasOne("CompaniesEntityFramework.Models.CompanyIndustry", "Industry")
                        .WithMany("CompanyInformation")
                        .HasForeignKey("IndustryId")
                        .HasConstraintName("CompanyIndustry_CompanyInformation")
                        .IsRequired();

                    b.HasOne("CompaniesEntityFramework.Models.CompanySymbol", "Symbol")
                        .WithMany("CompanyInformation")
                        .HasForeignKey("SymbolId")
                        .HasConstraintName("CompanySymbol_CompanyInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
